import FormulaMethod.FormulaON;
import javafx.util.Pair;

import java.util.ArrayList;
import java.util.List;

public class Main {
    public static void main(String[] args) {
        FormulaON<Integer, Integer> x = new FormulaON<>(100);
//        for (int i = 1; i < 101; i++) {
//            System.out.println("data.add(new Pair<>(" + i + "," + i + ")) ;");
//        }
        List<Pair<Integer, Integer>> data = new ArrayList<>();
        data.add(new Pair<>(1,1)) ;
        data.add(new Pair<>(2,2)) ;
        data.add(new Pair<>(3,3)) ;
        data.add(new Pair<>(4,4)) ;
        data.add(new Pair<>(5,5)) ;
        data.add(new Pair<>(6,6)) ;
        data.add(new Pair<>(7,7)) ;
        data.add(new Pair<>(8,8)) ;
        data.add(new Pair<>(9,9)) ;
        data.add(new Pair<>(10,10)) ;
        data.add(new Pair<>(11,11)) ;
        data.add(new Pair<>(12,12)) ;
        data.add(new Pair<>(13,13)) ;
        data.add(new Pair<>(14,14)) ;
        data.add(new Pair<>(15,15)) ;
        data.add(new Pair<>(16,16)) ;
        data.add(new Pair<>(17,17)) ;
        data.add(new Pair<>(18,18)) ;
        data.add(new Pair<>(19,19)) ;
        data.add(new Pair<>(20,20)) ;
        data.add(new Pair<>(21,21)) ;
        data.add(new Pair<>(22,22)) ;
        data.add(new Pair<>(23,23)) ;
        data.add(new Pair<>(24,24)) ;
        data.add(new Pair<>(25,25)) ;
        data.add(new Pair<>(26,26)) ;
        data.add(new Pair<>(27,27)) ;
        data.add(new Pair<>(28,28)) ;
        data.add(new Pair<>(29,29)) ;
        data.add(new Pair<>(30,30)) ;
        data.add(new Pair<>(31,31)) ;
        data.add(new Pair<>(32,32)) ;
        data.add(new Pair<>(33,33)) ;
        data.add(new Pair<>(34,34)) ;
        data.add(new Pair<>(35,35)) ;
        data.add(new Pair<>(36,36)) ;
        data.add(new Pair<>(37,37)) ;
        data.add(new Pair<>(38,38)) ;
        data.add(new Pair<>(39,39)) ;
        data.add(new Pair<>(40,40)) ;
        data.add(new Pair<>(41,41)) ;
        data.add(new Pair<>(42,42)) ;
        data.add(new Pair<>(43,43)) ;
        data.add(new Pair<>(44,44)) ;
        data.add(new Pair<>(45,45)) ;
        data.add(new Pair<>(46,46)) ;
        data.add(new Pair<>(47,47)) ;
        data.add(new Pair<>(48,48)) ;
        data.add(new Pair<>(49,49)) ;
        data.add(new Pair<>(50,50)) ;
        data.add(new Pair<>(51,51)) ;
        data.add(new Pair<>(52,52)) ;
        data.add(new Pair<>(53,53)) ;
        data.add(new Pair<>(54,54)) ;
        data.add(new Pair<>(55,55)) ;
        data.add(new Pair<>(56,56)) ;
        data.add(new Pair<>(57,57)) ;
        data.add(new Pair<>(58,58)) ;
        data.add(new Pair<>(59,59)) ;
        data.add(new Pair<>(60,60)) ;
        data.add(new Pair<>(61,61)) ;
        data.add(new Pair<>(62,62)) ;
        data.add(new Pair<>(63,63)) ;
        data.add(new Pair<>(64,64)) ;
        data.add(new Pair<>(65,65)) ;
        data.add(new Pair<>(66,66)) ;
        data.add(new Pair<>(67,67)) ;
        data.add(new Pair<>(68,68)) ;
        data.add(new Pair<>(69,69)) ;
        data.add(new Pair<>(70,70)) ;
        data.add(new Pair<>(71,71)) ;
        data.add(new Pair<>(72,72)) ;
        data.add(new Pair<>(73,73)) ;
        data.add(new Pair<>(74,74)) ;
        data.add(new Pair<>(75,75)) ;
        data.add(new Pair<>(76,76)) ;
        data.add(new Pair<>(77,77)) ;
        data.add(new Pair<>(78,78)) ;
        data.add(new Pair<>(79,79)) ;
        data.add(new Pair<>(80,80)) ;
        data.add(new Pair<>(81,81)) ;
        data.add(new Pair<>(82,82)) ;
        data.add(new Pair<>(83,83)) ;
        data.add(new Pair<>(84,84)) ;
        data.add(new Pair<>(85,85)) ;
        data.add(new Pair<>(86,86)) ;
        data.add(new Pair<>(87,87)) ;
        data.add(new Pair<>(88,88)) ;
        data.add(new Pair<>(89,89)) ;
        data.add(new Pair<>(90,90)) ;
        data.add(new Pair<>(91,91)) ;
        data.add(new Pair<>(92,92)) ;
        data.add(new Pair<>(93,93)) ;
        data.add(new Pair<>(94,94)) ;
        data.add(new Pair<>(95,95)) ;
        data.add(new Pair<>(96,96)) ;
        data.add(new Pair<>(97,97)) ;
        data.add(new Pair<>(98,98)) ;
        data.add(new Pair<>(99,99)) ;
        data.add(new Pair<>(100,100)) ;

        x.putData(data);

        System.out.println(x.get(20));
    }
}